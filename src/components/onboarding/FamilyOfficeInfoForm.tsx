import { useState } from "react";
import { useOnboarding, FamilyOfficeInfo } from "@/context/OnboardingContext";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Card } from "@/components/ui/card";
import { toast } from "@/components/ui/use-toast";
import { motion } from "framer-motion";
import { ArrowRight, Building2 } from "lucide-react";

const LEGAL_ENTITY_TYPES = [
  "Corporation",
  "Family Limited Partnership",
  "Family Trust",
  "Foundation",
  "Limited Liability Company (LLC)",
  "Limited Partnership (LP)",
  "Other",
  "Private Investment Company",
  "Private Trust Company",
].sort();

const JURISDICTIONS = [
  "ðŸ‡¦ðŸ‡© Andorra",
  "ðŸ‡¦ðŸ‡ª United Arab Emirates",
  "ðŸ‡¦ðŸ‡« Afghanistan",
  "ðŸ‡¦ðŸ‡¬ Antigua and Barbuda",
  "ðŸ‡¦ðŸ‡® Anguilla",
  "ðŸ‡¦ðŸ‡± Albania",
  "ðŸ‡¦ðŸ‡² Armenia",
  "ðŸ‡¦ðŸ‡´ Angola",
  "ðŸ‡¦ðŸ‡· Argentina",
  "ðŸ‡¦ðŸ‡¸ American Samoa",
  "ðŸ‡¦ðŸ‡¹ Austria",
  "ðŸ‡¦ðŸ‡º Australia",
  "ðŸ‡¦ðŸ‡¼ Aruba",
  "ðŸ‡¦ðŸ‡½ Ã…land Islands",
  "ðŸ‡¦ðŸ‡¿ Azerbaijan",
  "ðŸ‡§ðŸ‡¦ Bosnia and Herzegovina",
  "ðŸ‡§ðŸ‡§ Barbados",
  "ðŸ‡§ðŸ‡© Bangladesh",
  "ðŸ‡§ðŸ‡ª Belgium",
  "ðŸ‡§ðŸ‡« Burkina Faso",
  "ðŸ‡§ðŸ‡¬ Bulgaria",
  "ðŸ‡§ðŸ‡­ Bahrain",
  "ðŸ‡§ðŸ‡® Burundi",
  "ðŸ‡§ðŸ‡¯ Benin",
  "ðŸ‡§ðŸ‡² Bermuda",
  "ðŸ‡§ðŸ‡³ Brunei",
  "ðŸ‡§ðŸ‡´ Bolivia",
  "ðŸ‡§ðŸ‡· Brazil",
  "ðŸ‡§ðŸ‡¸ Bahamas",
  "ðŸ‡§ðŸ‡¹ Bhutan",
  "ðŸ‡§ðŸ‡¼ Botswana",
  "ðŸ‡§ðŸ‡¾ Belarus",
  "ðŸ‡§ðŸ‡¿ Belize",
  "ðŸ‡¨ðŸ‡¦ Canada",
  "ðŸ‡¨ðŸ‡© DR Congo",
  "ðŸ‡¨ðŸ‡« Central African Republic",
  "ðŸ‡¨ðŸ‡¬ Republic of the Congo",
  "ðŸ‡¨ðŸ‡­ Switzerland",
  "ðŸ‡¨ðŸ‡® CÃ´te d'Ivoire",
  "ðŸ‡¨ðŸ‡° Cook Islands",
  "ðŸ‡¨ðŸ‡± Chile",
  "ðŸ‡¨ðŸ‡² Cameroon",
  "ðŸ‡¨ðŸ‡³ China",
  "ðŸ‡¨ðŸ‡´ Colombia",
  "ðŸ‡¨ðŸ‡· Costa Rica",
  "ðŸ‡¨ðŸ‡º Cuba",
  "ðŸ‡¨ðŸ‡» Cape Verde",
  "ðŸ‡¨ðŸ‡¼ CuraÃ§ao",
  "ðŸ‡¨ðŸ‡¾ Cyprus",
  "ðŸ‡¨ðŸ‡¿ Czech Republic",
  "ðŸ‡©ðŸ‡ª Germany",
  "ðŸ‡©ðŸ‡¯ Djibouti",
  "ðŸ‡©ðŸ‡° Denmark",
  "ðŸ‡©ðŸ‡² Dominica",
  "ðŸ‡©ðŸ‡´ Dominican Republic",
  "ðŸ‡©ðŸ‡¿ Algeria",
  "ðŸ‡ªðŸ‡¨ Ecuador",
  "ðŸ‡ªðŸ‡ª Estonia",
  "ðŸ‡ªðŸ‡¬ Egypt",
  "ðŸ‡ªðŸ‡­ Western Sahara",
  "ðŸ‡ªðŸ‡· Eritrea",
  "ðŸ‡ªðŸ‡¸ Spain",
  "ðŸ‡ªðŸ‡¹ Ethiopia",
  "ðŸ‡«ðŸ‡® Finland",
  "ðŸ‡«ðŸ‡¯ Fiji",
  "ðŸ‡«ðŸ‡° Falkland Islands",
  "ðŸ‡«ðŸ‡² Micronesia",
  "ðŸ‡«ðŸ‡´ Faroe Islands",
  "ðŸ‡«ðŸ‡· France",
  "ðŸ‡¬ðŸ‡¦ Gabon",
  "ðŸ‡¬ðŸ‡§ United Kingdom",
  "ðŸ‡¬ðŸ‡© Grenada",
  "ðŸ‡¬ðŸ‡ª Georgia",
  "ðŸ‡¬ðŸ‡« French Guiana",
  "ðŸ‡¬ðŸ‡¬ Guernsey",
  "ðŸ‡¬ðŸ‡­ Ghana",
  "ðŸ‡¬ðŸ‡® Gibraltar",
  "ðŸ‡¬ðŸ‡± Greenland",
  "ðŸ‡¬ðŸ‡² Gambia",
  "ðŸ‡¬ðŸ‡³ Guinea",
  "ðŸ‡¬ðŸ‡µ Guadeloupe",
  "ðŸ‡¬ðŸ‡¶ Equatorial Guinea",
  "ðŸ‡¬ðŸ‡· Greece",
  "ðŸ‡¬ðŸ‡¸ South Georgia",
  "ðŸ‡¬ðŸ‡¹ Guatemala",
  "ðŸ‡¬ðŸ‡º Guam",
  "ðŸ‡¬ðŸ‡¼ Guinea-Bissau",
  "ðŸ‡¬ðŸ‡¾ Guyana",
  "ðŸ‡­ðŸ‡° Hong Kong",
  "ðŸ‡­ðŸ‡³ Honduras",
  "ðŸ‡­ðŸ‡· Croatia",
  "ðŸ‡­ðŸ‡¹ Haiti",
  "ðŸ‡­ðŸ‡º Hungary",
  "ðŸ‡®ðŸ‡© Indonesia",
  "ðŸ‡®ðŸ‡ª Ireland",
  "ðŸ‡®ðŸ‡± Israel",
  "ðŸ‡®ðŸ‡² Isle of Man",
  "ðŸ‡®ðŸ‡³ India",
  "ðŸ‡®ðŸ‡´ British Indian Ocean Territory",
  "ðŸ‡®ðŸ‡¶ Iraq",
  "ðŸ‡®ðŸ‡· Iran",
  "ðŸ‡®ðŸ‡¸ Iceland",
  "ðŸ‡®ðŸ‡¹ Italy",
  "ðŸ‡¯ðŸ‡ª Jersey",
  "ðŸ‡¯ðŸ‡² Jamaica",
  "ðŸ‡¯ðŸ‡´ Jordan",
  "ðŸ‡¯ðŸ‡µ Japan",
  "ðŸ‡°ðŸ‡ª Kenya",
  "ðŸ‡°ðŸ‡¬ Kyrgyzstan",
  "ðŸ‡°ðŸ‡­ Cambodia",
  "ðŸ‡°ðŸ‡® Kiribati",
  "ðŸ‡°ðŸ‡² Comoros",
  "ðŸ‡°ðŸ‡³ Saint Kitts and Nevis",
  "ðŸ‡°ðŸ‡µ North Korea",
  "ðŸ‡°ðŸ‡· South Korea",
  "ðŸ‡°ðŸ‡¼ Kuwait",
  "ðŸ‡°ðŸ‡¾ Cayman Islands",
  "ðŸ‡°ðŸ‡¿ Kazakhstan",
  "ðŸ‡±ðŸ‡¦ Laos",
  "ðŸ‡±ðŸ‡§ Lebanon",
  "ðŸ‡±ðŸ‡¨ Saint Lucia",
  "ðŸ‡±ðŸ‡® Liechtenstein",
  "ðŸ‡±ðŸ‡° Sri Lanka",
  "ðŸ‡±ðŸ‡· Liberia",
  "ðŸ‡±ðŸ‡¸ Lesotho",
  "ðŸ‡±ðŸ‡¹ Lithuania",
  "ðŸ‡±ðŸ‡º Luxembourg",
  "ðŸ‡±ðŸ‡» Latvia",
  "ðŸ‡±ðŸ‡¾ Libya",
  "ðŸ‡²ðŸ‡¦ Morocco",
  "ðŸ‡²ðŸ‡¨ Monaco",
  "ðŸ‡²ðŸ‡© Moldova",
  "ðŸ‡²ðŸ‡ª Montenegro",
  "ðŸ‡²ðŸ‡« Saint Martin",
  "ðŸ‡²ðŸ‡¬ Madagascar",
  "ðŸ‡²ðŸ‡­ Marshall Islands",
  "ðŸ‡²ðŸ‡° North Macedonia",
  "ðŸ‡²ðŸ‡± Mali",
  "ðŸ‡²ðŸ‡² Myanmar",
  "ðŸ‡²ðŸ‡³ Mongolia",
  "ðŸ‡²ðŸ‡´ Macau",
  "ðŸ‡²ðŸ‡µ Northern Mariana Islands",
  "ðŸ‡²ðŸ‡¶ Martinique",
  "ðŸ‡²ðŸ‡· Mauritania",
  "ðŸ‡²ðŸ‡¸ Montserrat",
  "ðŸ‡²ðŸ‡¹ Malta",
  "ðŸ‡²ðŸ‡º Mauritius",
  "ðŸ‡²ðŸ‡» Maldives",
  "ðŸ‡²ðŸ‡¼ Malawi",
  "ðŸ‡²ðŸ‡½ Mexico",
  "ðŸ‡²ðŸ‡¾ Malaysia",
  "ðŸ‡²ðŸ‡¿ Mozambique",
  "ðŸ‡³ðŸ‡¦ Namibia",
  "ðŸ‡³ðŸ‡¨ New Caledonia",
  "ðŸ‡³ðŸ‡ª Niger",
  "ðŸ‡³ðŸ‡« Norfolk Island",
  "ðŸ‡³ðŸ‡¬ Nigeria",
  "ðŸ‡³ðŸ‡® Nicaragua",
  "ðŸ‡³ðŸ‡± Netherlands",
  "ðŸ‡³ðŸ‡´ Norway",
  "ðŸ‡³ðŸ‡µ Nepal",
  "ðŸ‡³ðŸ‡· Nauru",
  "ðŸ‡³ðŸ‡º Niue",
  "ðŸ‡³ðŸ‡¿ New Zealand",
  "ðŸ‡´ðŸ‡² Oman",
  "ðŸ‡µðŸ‡¦ Panama",
  "ðŸ‡µðŸ‡ª Peru",
  "ðŸ‡µðŸ‡« French Polynesia",
  "ðŸ‡µðŸ‡¬ Papua New Guinea",
  "ðŸ‡µðŸ‡­ Philippines",
  "ðŸ‡µðŸ‡° Pakistan",
  "ðŸ‡µðŸ‡± Poland",
  "ðŸ‡µðŸ‡² Saint Pierre and Miquelon",
  "ðŸ‡µðŸ‡³ Pitcairn Islands",
  "ðŸ‡µðŸ‡· Puerto Rico",
  "ðŸ‡µðŸ‡¸ Palestine",
  "ðŸ‡µðŸ‡¹ Portugal",
  "ðŸ‡µðŸ‡¼ Palau",
  "ðŸ‡µðŸ‡¾ Paraguay",
  "ðŸ‡¶ðŸ‡¦ Qatar",
  "ðŸ‡·ðŸ‡ª RÃ©union",
  "ðŸ‡·ðŸ‡´ Romania",
  "ðŸ‡·ðŸ‡¸ Serbia",
  "ðŸ‡·ðŸ‡º Russia",
  "ðŸ‡·ðŸ‡¼ Rwanda",
  "ðŸ‡¸ðŸ‡¦ Saudi Arabia",
  "ðŸ‡¸ðŸ‡§ Solomon Islands",
  "ðŸ‡¸ðŸ‡¨ Seychelles",
  "ðŸ‡¸ðŸ‡© Sudan",
  "ðŸ‡¸ðŸ‡ª Sweden",
  "ðŸ‡¸ðŸ‡¬ Singapore",
  "ðŸ‡¸ðŸ‡­ Saint Helena",
  "ðŸ‡¸ðŸ‡® Slovenia",
  "ðŸ‡¸ðŸ‡° Slovakia",
  "ðŸ‡¸ðŸ‡± Sierra Leone",
  "ðŸ‡¸ðŸ‡² San Marino",
  "ðŸ‡¸ðŸ‡³ Senegal",
  "ðŸ‡¸ðŸ‡´ Somalia",
  "ðŸ‡¸ðŸ‡· Suriname",
  "ðŸ‡¸ðŸ‡¸ South Sudan",
  "ðŸ‡¸ðŸ‡¹ SÃ£o TomÃ© and PrÃ­ncipe",
  "ðŸ‡¸ðŸ‡» El Salvador",
  "ðŸ‡¸ðŸ‡½ Sint Maarten",
  "ðŸ‡¸ðŸ‡¾ Syria",
  "ðŸ‡¸ðŸ‡¿ Eswatini",
  "ðŸ‡¹ðŸ‡¨ Turks and Caicos Islands",
  "ðŸ‡¹ðŸ‡© Chad",
  "ðŸ‡¹ðŸ‡« French Southern Territories",
  "ðŸ‡¹ðŸ‡¬ Togo",
  "ðŸ‡¹ðŸ‡­ Thailand",
  "ðŸ‡¹ðŸ‡¯ Tajikistan",
  "ðŸ‡¹ðŸ‡° Tokelau",
  "ðŸ‡¹ðŸ‡± Timor-Leste",
  "ðŸ‡¹ðŸ‡² Turkmenistan",
  "ðŸ‡¹ðŸ‡³ Tunisia",
  "ðŸ‡¹ðŸ‡´ Tonga",
  "ðŸ‡¹ðŸ‡· Turkey",
  "ðŸ‡¹ðŸ‡¹ Trinidad and Tobago",
  "ðŸ‡¹ðŸ‡» Tuvalu",
  "ðŸ‡¹ðŸ‡¼ Taiwan",
  "ðŸ‡¹ðŸ‡¿ Tanzania",
  "ðŸ‡ºðŸ‡¦ Ukraine",
  "ðŸ‡ºðŸ‡¬ Uganda",
  "ðŸ‡ºðŸ‡¸ United States",
  "ðŸ‡ºðŸ‡¾ Uruguay",
  "ðŸ‡ºðŸ‡¿ Uzbekistan",
  "ðŸ‡»ðŸ‡¦ Vatican City",
  "ðŸ‡»ðŸ‡¨ Saint Vincent and the Grenadines",
  "ðŸ‡»ðŸ‡ª Venezuela",
  "ðŸ‡»ðŸ‡¬ British Virgin Islands",
  "ðŸ‡»ðŸ‡® U.S. Virgin Islands",
  "ðŸ‡»ðŸ‡³ Vietnam",
  "ðŸ‡»ðŸ‡º Vanuatu",
  "ðŸ‡¼ðŸ‡« Wallis and Futuna",
  "ðŸ‡¼ðŸ‡¸ Samoa",
  "ðŸ‡¾ðŸ‡ª Yemen",
  "ðŸ‡¾ðŸ‡¹ Mayotte",
  "ðŸ‡¿ðŸ‡¦ South Africa",
  "ðŸ‡¿ðŸ‡² Zambia",
  "ðŸ‡¿ðŸ‡¼ Zimbabwe"
].sort();

const FamilyOfficeInfoForm = () => {
  const { onboardingData, updateFamilyOfficeInfo, setCurrentStep } = useOnboarding();
  const [formData, setFormData] = useState<FamilyOfficeInfo>(onboardingData.familyOfficeInfo);

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const { name, value } = e.target;
    setFormData({ ...formData, [name]: value });
  };

  const handleSelectionChange = (name: keyof FamilyOfficeInfo, value: string) => {
    setFormData({ ...formData, [name]: value });
  };

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    
    // Simple validation
    const requiredFields: (keyof FamilyOfficeInfo)[] = ['officeName', 'legalEntityType', 'taxId', 'jurisdiction', 'email'];
    const missingFields = requiredFields.filter(field => !formData[field]);
    
    if (missingFields.length > 0) {
      toast({
        title: "Missing information",
        description: `Please complete all required fields.`,
        variant: "destructive",
      });
      return;
    }
    
    // Email validation
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailRegex.test(formData.email)) {
      toast({
        title: "Invalid email",
        description: "Please enter a valid email address.",
        variant: "destructive",
      });
      return;
    }
    
    updateFamilyOfficeInfo(formData);
    setCurrentStep(1); // Move to primary contact step
  };

  const itemVariants = {
    hidden: { opacity: 0, y: 10 },
    visible: (i: number) => ({
      opacity: 1,
      y: 0,
      transition: {
        delay: i * 0.1,
        duration: 0.3,
      },
    }),
  };

  return (
    <motion.div
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      transition={{ duration: 0.5 }}
      className="w-full max-w-3xl mx-auto"
    >
      <Card className="p-6 md:p-8 shadow-sm">
        <form onSubmit={handleSubmit} className="space-y-6">
          <div className="flex items-center gap-3 mb-2">
            <Building2 className="h-7 w-7 text-blue-500" />
            <h2 className="text-2xl font-bold">Family Office Information</h2>
          </div>
          <p className="text-gray-500">
            Please provide the details of your family office entity for KYC verification.
          </p>

          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <motion.div 
              custom={0}
              variants={itemVariants}
              initial="hidden"
              animate="visible"
              className="space-y-2 col-span-full"
            >
              <Label htmlFor="officeName">Family Office Name*</Label>
              <Input
                id="officeName"
                name="officeName"
                value={formData.officeName}
                onChange={handleInputChange}
                placeholder="Smith Family Office LLC"
                className="h-11"
              />
            </motion.div>

            <motion.div 
              custom={1}
              variants={itemVariants}
              initial="hidden"
              animate="visible"
              className="space-y-2"
            >
              <Label htmlFor="legalEntityType">Legal Entity Type*</Label>
              <Select
                value={formData.legalEntityType}
                onValueChange={(value) => handleSelectionChange("legalEntityType", value)}
              >
                <SelectTrigger className="h-11">
                  <SelectValue placeholder="Select entity type" />
                </SelectTrigger>
                <SelectContent>
                  {LEGAL_ENTITY_TYPES.map((type) => (
                    <SelectItem key={type} value={type}>
                      {type}
                    </SelectItem>
                  ))}
                </SelectContent>
              </Select>
            </motion.div>

            <motion.div 
              custom={2}
              variants={itemVariants}
              initial="hidden"
              animate="visible"
              className="space-y-2"
            >
              <Label htmlFor="jurisdiction">Jurisdiction*</Label>
              <Select
                value={formData.jurisdiction}
                onValueChange={(value) => handleSelectionChange("jurisdiction", value)}
              >
                <SelectTrigger className="h-11">
                  <SelectValue placeholder="Select jurisdiction" />
                </SelectTrigger>
                <SelectContent>
                  {JURISDICTIONS.map((jurisdiction) => (
                    <SelectItem key={jurisdiction} value={jurisdiction}>
                      {jurisdiction}
                    </SelectItem>
                  ))}
                </SelectContent>
              </Select>
            </motion.div>

            <motion.div 
              custom={3}
              variants={itemVariants}
              initial="hidden"
              animate="visible"
              className="space-y-2"
            >
              <Label htmlFor="registrationNumber">Registration Number</Label>
              <Input
                id="registrationNumber"
                name="registrationNumber"
                value={formData.registrationNumber}
                onChange={handleInputChange}
                placeholder="e.g., LLC-12345678"
                className="h-11"
              />
            </motion.div>

            <motion.div 
              custom={4}
              variants={itemVariants}
              initial="hidden"
              animate="visible"
              className="space-y-2"
            >
              <Label htmlFor="taxId">Tax ID Number*</Label>
              <Input
                id="taxId"
                name="taxId"
                value={formData.taxId}
                onChange={handleInputChange}
                placeholder="e.g., 12-3456789"
                className="h-11"
              />
            </motion.div>

            <motion.div 
              custom={5}
              variants={itemVariants}
              initial="hidden"
              animate="visible"
              className="space-y-2"
            >
              <Label htmlFor="yearEstablished">Year Established</Label>
              <Input
                id="yearEstablished"
                name="yearEstablished"
                value={formData.yearEstablished}
                onChange={handleInputChange}
                placeholder="e.g., 2015"
                className="h-11"
                type="number"
                min="1900"
                max={new Date().getFullYear()}
              />
            </motion.div>

            <motion.div 
              custom={6}
              variants={itemVariants}
              initial="hidden"
              animate="visible"
              className="space-y-2"
            >
              <Label htmlFor="email">Email Address*</Label>
              <Input
                id="email"
                name="email"
                type="email"
                value={formData.email}
                onChange={handleInputChange}
                placeholder="office@smithfamilyoffice.com"
                className="h-11"
              />
            </motion.div>

            <motion.div 
              custom={7}
              variants={itemVariants}
              initial="hidden"
              animate="visible"
              className="space-y-2"
            >
              <Label htmlFor="phone">Phone Number</Label>
              <Input
                id="phone"
                name="phone"
                value={formData.phone}
                onChange={handleInputChange}
                placeholder="+1 (555) 123-4567"
                className="h-11"
              />
            </motion.div>

            <motion.div 
              custom={8}
              variants={itemVariants}
              initial="hidden"
              animate="visible"
              className="space-y-2"
            >
              <Label htmlFor="website">Website</Label>
              <Input
                id="website"
                name="website"
                value={formData.website}
                onChange={handleInputChange}
                placeholder="https://smithfamilyoffice.com"
                className="h-11"
              />
            </motion.div>
          </div>

          <div className="pt-4 border-t">
            <p className="text-sm text-gray-500 mb-6">
              Fields marked with * are required.
            </p>
            <div className="flex justify-end">
              <Button 
                type="submit" 
                size="lg" 
                variant="blue"
                className="rounded-lg hover:shadow-md transition-shadow"
              >
                Continue
                <ArrowRight className="ml-2 h-4 w-4" />
              </Button>
            </div>
          </div>
        </form>
      </Card>
    </motion.div>
  );
};

export default FamilyOfficeInfoForm;
